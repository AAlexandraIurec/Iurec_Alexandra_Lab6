<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Iurec_Alexandra_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Iurec_Alexandra_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrdersViewSource" Source="{Binding Orders, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>  
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="334" Margin="42,47,0,0" VerticalAlignment="Top" Width="700">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}" Margin="0,0,0.4,0.4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80*"/>
                        <ColumnDefinition Width="27*"/>
                        <ColumnDefinition Width="587*"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="30,34,0,0" VerticalAlignment="Top" Width="87" Height="25" Click="btnNew_Click" Grid.ColumnSpan="3"/>
                    <Button x:Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="30,81,0,0" VerticalAlignment="Top" Width="87" Height="25" Click="btnEdit_Click" Grid.ColumnSpan="3"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="30,135,0,0" VerticalAlignment="Top" Width="87" Height="25" Click="btnDelete_Click" Grid.ColumnSpan="3" />
                    <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="30,218,0,0" VerticalAlignment="Top" Width="87" Height="25" IsEnabled="False" Click="btnSave_Click" Grid.ColumnSpan="3">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <!--Butonul Save va fi inactiv daca exista erori de validare -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />

                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="30,257,0,0" VerticalAlignment="Top" Width="87" Height="25" IsEnabled="False" Grid.ColumnSpan="3" Click="btnCancel_Click"/>
                    <Button x:Name="btnPrevious" Content="Previous" HorizontalAlignment="Left" Margin="230.8,149,0,0" VerticalAlignment="Top" Width="87" Height="25" Click="btnPrevious_Click" Grid.Column="2"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="489.8,149,0,0" VerticalAlignment="Top" Width="87" Height="25" Click="btnNext_Click" Grid.Column="2"/>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" Grid.Column="2" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="230.8,10,27.4,178.4" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" Grid.Column="2" HorizontalAlignment="Left" Margin="297.8,194,0,0" VerticalAlignment="Top" Height="112" Width="215">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="76.8"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="25.1"/>
                            <RowDefinition Height="6.9"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center" Grid.ColumnSpan="2"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="24" Margin="3.2,4,0,4" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.RowSpan="2" IsEnabled="False" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="303,10,28.4,180.4" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="389,177,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="0" VerticalAlignment="Center" Grid.RowSpan="2"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.4,4,0,4" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Grid.RowSpan="2" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.4,4,0,4" Grid.Row="2" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="24" Margin="3.4,4,0,4" Grid.Row="3" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                    </Grid>
                    <Button x:Name="btnNewInventory" Content="New" HorizontalAlignment="Left" Margin="33,32,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnNewInventory_Click"/>
                    <Button x:Name="btnEditInventory" Content="Edit" HorizontalAlignment="Left" Margin="33,82,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnEditInventory_Click"/>
                    <Button x:Name="btnDeleteInventory" Content="Delete" HorizontalAlignment="Left" Margin="33,130,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnDeleteInventory_Click"/>
                    <Button x:Name="btnSaveInventory" Content="Save" HorizontalAlignment="Left" Margin="33,215,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnSaveInventory_Click" IsEnabled="False"/>
                    <Button x:Name="btnCancelInventory" Content="Cancel" HorizontalAlignment="Left" Margin="33,254,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnCancelInventory_Click" IsEnabled="False"/>
                    <Button x:Name="btnPreviousInventory" Content="Previous" HorizontalAlignment="Left" Margin="303,139,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnPreviousInventory_Click"/>
                    <Button x:Name="btnNextInventory" Content="Next" HorizontalAlignment="Left" Margin="586,139,0,0" VerticalAlignment="Top" Width="80" Height="28" Click="btnNextInventory_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrdersViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="97*"/>
                        <ColumnDefinition Width="597*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="61.8,69,0,0" VerticalAlignment="Top" Width="182" Height="30" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="333.8,69,0,0" VerticalAlignment="Top" Width="182" Height="30" Grid.Column="1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox> 
                    <Label x:Name="lblCustomers" HorizontalAlignment="Left" Margin="61.8,25,0,0" VerticalAlignment="Top" Height="24" Width="182" IsEnabled="False" Content="Customers" Grid.Column="1"/>
                    <Label x:Name="lblInventory" Content="Inventory" HorizontalAlignment="Left" Margin="333.8,25,0,0" VerticalAlignment="Top" Height="24" Width="182" IsEnabled="False" Grid.Column="1"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="61.8,132,81.4,52.4" RowDetailsVisibilityMode="VisibleWhenSelected"  IsSynchronizedWithCurrentItem="True" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}"
                                    Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}"
                                    Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}"
                                    Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}"
                                    Header="Color" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnNewOrders" Content="New" HorizontalAlignment="Left" Margin="23,31,0,0" VerticalAlignment="Top" Width="87" Height="25" Grid.ColumnSpan="2" Click="btnNewOrders_Click" />
                    <Button x:Name="btnEditOrders" Content="Edit" HorizontalAlignment="Left" Margin="23,69,0,0" VerticalAlignment="Top" Width="87" Height="25" Grid.ColumnSpan="2" Click="btnEditOrders_Click" />
                    <Button x:Name="btnDeleteOrders" Content="Delete" HorizontalAlignment="Left" Margin="23,114,0,0" VerticalAlignment="Top" Width="87" Height="25" Grid.ColumnSpan="2" Click="btnDeleteOrders_Click" />
                    <Button x:Name="btnSaveOrders" Content="Save" HorizontalAlignment="Left" Margin="23,204,0,0" VerticalAlignment="Top" Width="87" Height="25" Grid.ColumnSpan="2" Click="btnSaveOrders_Click" />
                    <Button x:Name="btnCancelOrders" Content="Cancel" HorizontalAlignment="Left" Margin="23,250,0,0" VerticalAlignment="Top" Width="87" Height="25"  Grid.ColumnSpan="2" Click="btnCancelOrders_Click"/>
                    <Button x:Name="btnPreviousOrders" Content="Previous" HorizontalAlignment="Left" Margin="80.8,271,0,0" VerticalAlignment="Top" Width="87" Height="25"  Grid.Column="1" Click="btnPreviousOrders_Click"/>
                    <Button x:Name="btnNextOrders" Content="Next" HorizontalAlignment="Left" Margin="428.8,271,0,0" VerticalAlignment="Top" Width="87" Height="25" Grid.Column="1" Click="btnNextOrders_Click"/>
                </Grid>
            </TabItem>
            <Button Content="Button" Height="10" Width="69"/>
        </TabControl>

    </Grid>
</Window>
